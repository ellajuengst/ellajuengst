{"ast":null,"code":"import React from'react';import{Redirect}from'react-router';import{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";import artProjects from'../data/art-data';import WorkPageHeader from'../components/WorkPageHeader';import MainLogo from\"../assets/main-logo.svg\";import WorkPageTextSection from'../components/WorkPageTextSection';import SubsectionContainer from'../components/SubsectionContainer';import WorkPageImage from'../components/WorkPageImage';import WorkPageList from'../components/WorkPageList';import WorkPageImageText from'../components/WorkPageImageText';import WorkPageLink from'../components/WorkPageLink';import WorkPageImageHover from'../components/WorkPageImageHover';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ArtWorkPage(_ref){var id=_ref.match.params.id,props=_ref.props;var thisProject=artProjects.filter(function(p){return p.id==='/'+p.category+'/'+id;});if(thisProject.length<=0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:\"/404\"}});}var w=thisProject[0];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:MainLogo,alt:\"MainLogo\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{color:w.textColor},className:\"work-page\",children:[/*#__PURE__*/_jsx(WorkPageHeader,{w:w,name:w.name,category:w.category,path:w.id,logotype:w.logotype,cover:w.cover,subcat:w.subcategory,tools:w.tools,textColor:w.textColor,mainColor:w.mainColor,accentColor:w.accentColor}),w.content.map(function(obj){console.log(obj.type);if(obj.type==='text'){return/*#__PURE__*/_jsx(WorkPageTextSection,{color:w.mainColor,header:obj.header,text:obj.text,subheader:obj.subheader,obj:obj,bg:w.backgroundColor,emphasis:obj.emphasis,align:obj.align});}else if(obj.type==='subsection'){return/*#__PURE__*/_jsx(SubsectionContainer,{obj:obj,color:w.mainColor,bg:w.backgroundColor});}else if(obj.type==='image'){return/*#__PURE__*/_jsx(WorkPageImage,{color:w.mainColor,obj:obj});}else if(obj.type==='list'){return/*#__PURE__*/_jsx(WorkPageList,{color:w.mainColor,obj:obj,bg:w.backgroundColor});}else if(obj.type==='image-text'){return/*#__PURE__*/_jsx(WorkPageImageText,{color:w.mainColor,obj:obj});}else if(obj.type==='link'){return/*#__PURE__*/_jsx(WorkPageLink,{mainColor:w.mainColor,textColor:w.textColor,obj:obj});}else if(obj.type==='image-hover'){return/*#__PURE__*/_jsx(WorkPageImageHover,{color:w.mainColor,obj:obj});}})]})]});}","map":{"version":3,"sources":["/Users/ellajuengst/dev/ejuengst/src/pages/ArtWorkPage.js"],"names":["React","Redirect","BrowserRouter","Router","Switch","Route","Link","artProjects","WorkPageHeader","WorkPageTextSection","SubsectionContainer","WorkPageImage","WorkPageList","WorkPageImageText","WorkPageLink","WorkPageImageHover","ArtWorkPage","id","match","params","props","thisProject","filter","p","category","length","pathname","w","MainLogo","color","textColor","name","logotype","cover","subcategory","tools","mainColor","accentColor","content","map","obj","console","log","type","header","text","subheader","backgroundColor","emphasis","align"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport artProjects from '../data/art-data'\nimport WorkPageHeader from '../components/WorkPageHeader'\nimport MainLogo from '../assets/main-logo.svg'\nimport WorkPageTextSection from '../components/WorkPageTextSection';\nimport SubsectionContainer from '../components/SubsectionContainer';\nimport WorkPageImage from '../components/WorkPageImage';\nimport WorkPageList from '../components/WorkPageList';\nimport WorkPageImageText from '../components/WorkPageImageText';\nimport WorkPageLink from '../components/WorkPageLink';\nimport WorkPageImageHover from '../components/WorkPageImageHover';\n\n\n\nexport default function ArtWorkPage({match: {params: { id }}, props}) {\n\n    let thisProject = artProjects.filter((p) => p.id === '/' + p.category+ '/'+id);\n    if (thisProject.length <= 0) {\n        return (\n            <Redirect to={{pathname: \"/404\"}}/>\n        )\n    } \n\n    let w = thisProject[0]\n    \n    return (\n        <div>\n            <Link to=\"/\"><img className=\"logo\"  src={MainLogo} alt='MainLogo' /></Link>\n            <div style={{color: w.textColor}} className='work-page'>\n                <WorkPageHeader w={w} name={w.name} category={w.category} path={w.id} logotype={w.logotype} cover={w.cover} subcat={w.subcategory} tools={w.tools} textColor={w.textColor} mainColor={w.mainColor} accentColor={w.accentColor}/>\n                {w.content.map(obj => {\n                    console.log(obj.type)\n                    if (obj.type === 'text') {\n                        return <WorkPageTextSection color={w.mainColor} header={obj.header} text={obj.text} subheader={obj.subheader} obj={obj} bg={w.backgroundColor} emphasis={obj.emphasis} align={obj.align}/>\n                    } else if (obj.type === 'subsection') {\n                        return <SubsectionContainer obj={obj} color={w.mainColor} bg={w.backgroundColor}/>\n                    } else if (obj.type === 'image') {\n                        return <WorkPageImage color={w.mainColor} obj={obj} />\n                    } else if (obj.type === 'list') {\n                        return <WorkPageList color={w.mainColor} obj={obj} bg={w.backgroundColor} />\n                    } else if (obj.type === 'image-text') {\n                        return <WorkPageImageText color={w.mainColor} obj={obj} />\n                    } else if (obj.type === 'link') {\n                        return <WorkPageLink mainColor={w.mainColor} textColor={w.textColor} obj={obj} />\n                    } else if (obj.type === 'image-hover') {\n                        return <WorkPageImageHover color={w.mainColor} obj={obj}  />\n                    } \n                })}\n            </div> \n         \n\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}