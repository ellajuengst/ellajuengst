{"ast":null,"code":"var _jsxFileName = \"/Users/ellajuengst/dev/ejuengst/src/components/WorkThumb.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Illustrator from \"../assets/tools/illustrator.svg\";\nimport Indesign from \"../assets/tools/indesign.svg\";\nimport Photoshop from \"../assets/tools/photoshop.svg\";\nimport Xd from \"../assets/tools/xd.svg\";\nimport Figma from \"../assets/tools/figma.svg\";\nimport ReactIcon from \"../assets/tools/react.svg\";\nimport Js from \"../assets/tools/js.svg\";\nimport Node from \"../assets/tools/node.svg\";\nimport Bootstrap from \"../assets/tools/bootstrap.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkThumb(props) {\n  let tools = {\n    'illustrator': Illustrator,\n    'indesign': Indesign,\n    'photoshop': Photoshop,\n    'xd': Xd,\n    'figma': Figma,\n    'react': ReactIcon,\n    'node': Node,\n    'js': Js,\n    'bootstrap': Bootstrap\n  };\n  let logotypeWidth = '300';\n\n  if (props.logotypeWidth) {\n    console.log(props.w.logotypeWidth);\n    logotypeWidth = props.w.logotypeWidth;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"work-thumb\",\n    to: props.path,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-thumb-sub\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-thumb-col1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logotype\",\n          width: logotypeWidth,\n          src: props.logotype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: props.mainColor\n          },\n          className: \"subcat\",\n          children: props.subcat.map((s, k) => {\n            if (k == props.subcat.length - 1) {\n              return s;\n            } else {\n              return s + ', ';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-container\",\n          children: props.tools.map(t => /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"tool\",\n            src: tools[t]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 51\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-thumb-col2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"300\",\n          src: props.cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: `2px solid ${props.accentColor}`\n      },\n      className: \"top-border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n_c = WorkThumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkThumb\");","map":{"version":3,"sources":["/Users/ellajuengst/dev/ejuengst/src/components/WorkThumb.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","WorkThumb","props","tools","Illustrator","Indesign","Photoshop","Xd","Figma","ReactIcon","Node","Js","Bootstrap","logotypeWidth","console","log","w","path","logotype","color","mainColor","subcat","map","s","k","length","t","cover","borderTop","accentColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKS,kBALT;;;;;;;;;;;AAiBA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,MAAIC,KAAK,GAAG;AACR,mBAAeC,WADP;AAER,gBAAYC,QAFJ;AAGR,iBAAaC,SAHL;AAIR,UAAMC,EAJE;AAKR,aAASC,KALD;AAMR,aAASC,SAND;AAOR,YAAQC,IAPA;AAQR,UAAMC,EARE;AASR,iBAAaC;AATL,GAAZ;AAaA,MAAIC,aAAa,GAAG,KAApB;;AAEA,MAAIX,KAAK,CAACW,aAAV,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,CAAN,CAAQH,aAApB;AACAA,IAAAA,aAAa,GAAGX,KAAK,CAACc,CAAN,CAAQH,aAAxB;AACH;;AAED,sBAEQ,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAEX,KAAK,CAACe,IAAvC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAEJ,aAAjC;AAAgD,UAAA,GAAG,EAAEX,KAAK,CAACgB;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAAd,WAAX;AAAqC,UAAA,SAAS,EAAC,QAA/C;AAAA,oBAAyDlB,KAAK,CAACmB,MAAN,CAAaC,GAAb,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChF,gBAAIA,CAAC,IAAItB,KAAK,CAACmB,MAAN,CAAaI,MAAb,GAAsB,CAA/B,EAAkC;AAC9B,qBAAOF,CAAP;AACH,aAFD,MAEO;AACH,qBAAOA,CAAC,GAAG,IAAX;AACH;AACJ,WANwD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACKrB,KAAK,CAACC,KAAN,CAAYmB,GAAZ,CAAgBI,CAAC,iBAAI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAEvB,KAAK,CAACuB,CAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAArB;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,KAAX;AAAiB,UAAA,GAAG,EAAExB,KAAK,CAACyB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG,aAAY1B,KAAK,CAAC2B,WAAY;AAA3C,OAAZ;AAA2D,MAAA,SAAS,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AA2BH;KAjDuB5B,S","sourcesContent":["import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Illustrator from '../assets/tools/illustrator.svg'\nimport Indesign from '../assets/tools/indesign.svg'\nimport Photoshop from '../assets/tools/photoshop.svg'\nimport Xd from '../assets/tools/xd.svg'\nimport Figma from '../assets/tools/figma.svg'\nimport ReactIcon from '../assets/tools/react.svg'\nimport Js from '../assets/tools/js.svg'\nimport Node from '../assets/tools/node.svg'\nimport Bootstrap from '../assets/tools/bootstrap.svg'\n\n\nexport default function WorkThumb(props) {\n\n    let tools = {\n        'illustrator': Illustrator,\n        'indesign': Indesign,\n        'photoshop': Photoshop,\n        'xd': Xd,\n        'figma': Figma,\n        'react': ReactIcon,\n        'node': Node,\n        'js': Js,\n        'bootstrap': Bootstrap\n    }\n\n\n    let logotypeWidth = '300';\n    \n    if (props.logotypeWidth) {\n        console.log(props.w.logotypeWidth)\n        logotypeWidth = props.w.logotypeWidth;\n    }\n\n    return (\n\n            <Link className=\"work-thumb\" to={props.path}>\n                <div className=\"work-thumb-sub\">\n                    <div className=\"work-thumb-col1\">\n                        <img className=\"logotype\" width={logotypeWidth} src={props.logotype}></img>\n                        <h2 style={{color: props.mainColor}} className=\"subcat\">{props.subcat.map((s, k) => {\n                            if (k == props.subcat.length - 1) {\n                                return s;\n                            } else {\n                                return s + ', ';\n                            }\n                        })}</h2>\n                        <div className=\"tool-container\">\n                            {props.tools.map(t => <img className=\"tool\" src={tools[t]}></img>)}\n                        </div>\n                    </div>\n                    <div className=\"work-thumb-col2\">\n                        <img width=\"300\" src={props.cover}></img>\n                    </div>\n                    \n                </div>\n                <div style={{borderTop: `2px solid ${props.accentColor}`}} className=\"top-border\"></div>\n\n            </Link>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}