{"ast":null,"code":"var _jsxFileName = \"/Users/ellajuengst/dev/ellajuengst/src/components/WorkPageHeader.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Illustrator from \"../assets/tools/illustrator.svg\";\nimport Indesign from \"../assets/tools/indesign.svg\";\nimport Photoshop from \"../assets/tools/photoshop.svg\";\nimport Xd from \"../assets/tools/xd.svg\";\nimport Figma from \"../assets/tools/figma.svg\";\nimport ReactIcon from \"../assets/tools/react.svg\";\nimport Js from \"../assets/tools/js.svg\";\nimport Node from \"../assets/tools/node.svg\";\nimport Bootstrap from \"../assets/tools/bootstrap.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkPageHeader(props) {\n  let tools = {\n    'illustrator': Illustrator,\n    'indesign': Indesign,\n    'photoshop': Photoshop,\n    'xd': Xd,\n    'figma': Figma,\n    'react': ReactIcon,\n    'node': Node,\n    'js': Js,\n    'bootstrap': Bootstrap\n  };\n  let logotypeWidth = '300';\n\n  if (typeof props.w.logotypeWidth !== 'undefined') {\n    console.log(props.w.logotypeWidth);\n    logotypeWidth = props.w.logotypeWidth;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"work-page-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-thumb\",\n      to: props.path,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-thumb-sub\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-thumb-col1\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logotype\",\n            width: logotypeWidth,\n            src: props.logotype\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: props.mainColor\n            },\n            className: \"subcat\",\n            children: props.subcat.map((s, k) => {\n              if (k == props.subcat.length - 1) {\n                return s;\n              } else {\n                return s + ', ';\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-container\",\n            children: props.tools.map(t => /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"tool\",\n              src: tools[t]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 51\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-thumb-col2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"300\",\n            src: props.cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = WorkPageHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkPageHeader\");","map":{"version":3,"sources":["/Users/ellajuengst/dev/ellajuengst/src/components/WorkPageHeader.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","WorkPageHeader","props","tools","Illustrator","Indesign","Photoshop","Xd","Figma","ReactIcon","Node","Js","Bootstrap","logotypeWidth","w","console","log","path","logotype","color","mainColor","subcat","map","s","k","length","t","cover"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKS,kBALT;;;;;;;;;;;AAgBA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,MAAIC,KAAK,GAAG;AACR,mBAAeC,WADP;AAER,gBAAYC,QAFJ;AAGR,iBAAaC,SAHL;AAIR,UAAMC,EAJE;AAKR,aAASC,KALD;AAMR,aAASC,SAND;AAOR,YAAQC,IAPA;AAQR,UAAMC,EARE;AASR,iBAAaC;AATL,GAAZ;AAaA,MAAIC,aAAa,GAAG,KAApB;;AAEA,MAAI,OAAOX,KAAK,CAACY,CAAN,CAAQD,aAAf,KAAiC,WAArC,EAAkD;AAC9CE,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACY,CAAN,CAAQD,aAApB;AACAA,IAAAA,aAAa,GAAGX,KAAK,CAACY,CAAN,CAAQD,aAAxB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,EAAE,EAAEX,KAAK,CAACe,IAAtC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAEJ,aAAjC;AAAgD,YAAA,GAAG,EAAEX,KAAK,CAACgB;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAAd,aAAX;AAAqC,YAAA,SAAS,EAAC,QAA/C;AAAA,sBAAyDlB,KAAK,CAACmB,MAAN,CAAaC,GAAb,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChF,kBAAIA,CAAC,IAAItB,KAAK,CAACmB,MAAN,CAAaI,MAAb,GAAsB,CAA/B,EAAkC;AAC9B,uBAAOF,CAAP;AACH,eAFD,MAEO;AACH,uBAAOA,CAAC,GAAG,IAAX;AACH;AACJ,aANwD;AAAzD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eASI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACKrB,KAAK,CAACC,KAAN,CAAYmB,GAAZ,CAAgBI,CAAC,iBAAI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAsB,cAAA,GAAG,EAAEvB,KAAK,CAACuB,CAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAArB;AADL;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAC,KAAX;AAAiB,YAAA,GAAG,EAAExB,KAAK,CAACyB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;KA9CuB1B,c","sourcesContent":["import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Illustrator from '../assets/tools/illustrator.svg'\nimport Indesign from '../assets/tools/indesign.svg'\nimport Photoshop from '../assets/tools/photoshop.svg'\nimport Xd from '../assets/tools/xd.svg'\nimport Figma from '../assets/tools/figma.svg'\nimport ReactIcon from '../assets/tools/react.svg'\nimport Js from '../assets/tools/js.svg'\nimport Node from '../assets/tools/node.svg'\nimport Bootstrap from '../assets/tools/bootstrap.svg'\n\nexport default function WorkPageHeader(props) {\n\n    let tools = {\n        'illustrator': Illustrator,\n        'indesign': Indesign,\n        'photoshop': Photoshop,\n        'xd': Xd,\n        'figma': Figma,\n        'react': ReactIcon,\n        'node': Node,\n        'js': Js,\n        'bootstrap': Bootstrap\n    }\n\n\n    let logotypeWidth = '300';\n    \n    if (typeof props.w.logotypeWidth !== 'undefined') {\n        console.log(props.w.logotypeWidth)\n        logotypeWidth = props.w.logotypeWidth;\n    }\n    return (\n        <div className=\"work-page-header\">\n            <div className=\"work-thumb\" to={props.path}>\n                <div className=\"work-thumb-sub\">\n                    <div className=\"work-thumb-col1\">\n                        <img className=\"logotype\" width={logotypeWidth} src={props.logotype}></img>\n                        <h2 style={{color: props.mainColor}} className=\"subcat\">{props.subcat.map((s, k) => {\n                            if (k == props.subcat.length - 1) {\n                                return s;\n                            } else {\n                                return s + ', ';\n                            }\n                        })}</h2>\n                        <div className=\"tool-container\">\n                            {props.tools.map(t => <img className=\"tool\" src={tools[t]}></img>)}\n                        </div>\n                    </div>\n                    <div className=\"work-thumb-col2\">\n                        <img width=\"300\" src={props.cover}></img>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}